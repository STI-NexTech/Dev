(self.webpackChunkapp_studio_enterprise_omnichannel_messaging=self.webpackChunkapp_studio_enterprise_omnichannel_messaging||[]).push([[8789,1170],{51170:(j,m,o)=>{o.r(m),o.d(m,{COPILOT_INTENT_REPOSITORY_TOKEN:()=>u,CopilotActionCodeGeneratorService:()=>n,CopilotIntentManagerService:()=>p,CopilotUtilsModule:()=>l,copilotIntentMock:()=>S});var i=o(59131),c=o(38495),v=o(28399),t=o(62278);const u=new i.InjectionToken("COPILOT_INTENT_REPOSITORY_TOKEN");var d=o(96590),h=o(21018);class n{constructor(){this._copilotActionCodeMaxLength=41,this._defaultNewActionCode="Action",this._sysSettingsService=(0,i.inject)(c.SysSettingsService)}_checkCodeIsUnique(a,e){return a?!a.includes(e):!0}_generateCode(a){if(a.generateFromName){const e=a.name;if(!h.ConfigurationItemCodeGenerationUtils.isTextUsableForCodeGeneration(e))return null;const s=a.prefix+this._defaultNewActionCode;return s+h.ConfigurationItemCodeGenerationUtils.generateCode(e,this._copilotActionCodeMaxLength-s.length)}return d.NameGenerator.generateUnique(this._defaultNewActionCode,a.prefix)}generate(a,e=null){const s={generateFromName:!!e,name:e,prefix:null};return(0,t.from)(this._sysSettingsService.getByCode("SchemaNamePrefix")).pipe((0,t.map)(r=>r.value),(0,t.tap)(r=>s.prefix=r),(0,t.repeat)(s.generateFromName?1:void 0),(0,t.map)(()=>this._generateCode(s)),(0,t.filter)(r=>this._checkCodeIsUnique(a,r)),(0,t.take)(1),(0,t.defaultIfEmpty)(null))}static{this.\u0275fac=function(e){return new(e||n)}}static{this.\u0275prov=i.\u0275\u0275defineInjectable({token:n,factory:n.\u0275fac})}}class p{constructor(){this._repository=(0,i.inject)(u),this._actionCodeGenerator=(0,i.inject)(n)}_loadIntentUIdByActionUId(a){return(0,t.from)(c.Model.create("CopilotAction")).pipe((0,t.switchMap)(e=>e.load({attributes:["Intent"],parameters:[{type:c.ModelParameterType.Filter,value:new c.CompareFilter(c.ComparisonType.Equal,new c.ColumnExpression({columnPath:"Id"}),new c.ParameterExpression({value:a}))}]})),(0,t.map)(e=>{const s=e[0]||{};return(0,v.isEmpty)(s)?null:s.Intent?.value}))}_applyActionToIntent(a,e){const r=(a.Actions||[]).findIndex(g=>g.Id===e.Id);if(r===-1)return!1;const f=a.Actions[r];return a.Actions.splice(r,1,{...f,...e}),!0}getIntent(a){return this._repository.get(a)}createIntent(a){return this._repository.create(a.UId).pipe((0,t.map)(e=>(e.UId=a.UId,e.Title=a.Title,e.Code=a.Code,e.Status=a.Status,e.Description=a.Description,e.Prompt=a.Prompt,e.Mode=a.Mode,e)),(0,t.switchMap)(e=>this._repository.update(e)))}updateIntent(a){return this._repository.get(a.UId).pipe((0,t.map)(e=>({...e,...a})),(0,t.switchMap)(e=>this._repository.update(e)))}createAction(a){return this._repository.get(a.Intent.value).pipe((0,t.map)(e=>(e.Actions.push(a),e)),(0,t.switchMap)(e=>this._repository.update(e)))}getActionByUId(a){return this._loadIntentUIdByActionUId(a).pipe((0,t.switchMap)(e=>e?this._repository.get(e).pipe((0,t.map)(s=>s.Actions.filter(r=>r.Id===a)),(0,t.map)(s=>s[0])):(0,t.of)({})))}getIntentByActionUId(a){return this.getActionByUId(a).pipe((0,t.switchMap)(e=>e?.Intent?this.getIntent(e.Intent.value):(0,t.of)({})))}updateAction(a){return this._loadIntentUIdByActionUId(a.Id).pipe((0,t.switchMap)(e=>this._repository.get(e).pipe((0,t.switchMap)(s=>this._applyActionToIntent(s,a)?this._repository.update(s):(0,t.of)({})))))}generateActionCode(a,e=null){return this._actionCodeGenerator.generate(a,e)}static{this.\u0275fac=function(e){return new(e||p)}}static{this.\u0275prov=i.\u0275\u0275defineInjectable({token:p,factory:p.\u0275fac})}}const S={UId:"uid",Title:"Test intent",Description:"Test description",Code:"CopilotIntent_test",Prompt:null,Status:"InDevelopment",Mode:"Chat",Actions:[{Code:"ActionCode",Id:"ActionIdentifier",UId:"ActionUid",Name:"ActionName",Description:"ActionDescription",Intent:{value:"uid"},ActionType:"actionSchemaTypeUIdA",Params:'{"processSchemaUId":"ProcessSchemaUId"}'}],ExtendParent:!1,PackageUId:"SomePackageUniqueIdentifier"};var _=o(40297);const O={"zh-TW":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"zh-CN":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"vi-VN":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"tr-TR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"th-TH":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"sv-SE":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"sq-AL":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Procesi i skem\xEBs u ruajt me sukses, por gabimet e miratimit nuk e lejojn\xEB t\xEB vazhdoj\xEB."}}'),"ro-RO":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Schema de proces a fost salvat\u0103 cu succes, dar erorile de validare o \xEEmpiedic\u0103 s\u0103 ruleze."}}'),"pt-PT":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"pt-BR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"O esquema do processo foi salvo com \xEAxito, mas erros de valida\xE7\xE3o impedem sua execu\xE7\xE3o."}}'),"pl-PL":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Schemat procesu zapisany pomy\u015Blnie, ale b\u0142\u0119dy walidacji uniemo\u017Cliwiaj\u0105 jego uruchomienie."}}'),"nl-NL":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"lv-LV":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"ko-KR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"ja-JP":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"it-IT":JSON.parse(`{"Dialog":{"ProcessSchemaSavedWithValidationError":"Lo schema del processo \xE8 stato salvato con successo, ma gli errori di convalida impediscono l'esecuzione."}}`),"id-ID":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Skema proses berhasil disimpan, tetapi kesalahan validasi mencegahnya untuk dijalankan."}}'),"hu-HU":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"hr-HR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Shema procesa je uspje\u0161no spremljena, ali validacijske pogre\u0161ke sprje\u010Davaju njezvo izvr\u0161avanje."}}'),"he-IL":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"fr-FR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"es-ES":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"de-DE":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Das Prozessschema wurde erfolgreich gespeichert, aber Validierungsfehler verhindern, dass es ausgef\xFChrt wird."}}'),"cs-CZ":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"bg-BG":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u0421\u0445\u0435\u043C\u0430\u0442\u0430 \u043D\u0430 \u043F\u0440\u043E\u0446\u0435\u0441\u0430 \u0435 \u0437\u0430\u043F\u0430\u0437\u0435\u043D\u0430 \u0443\u0441\u043F\u0435\u0448\u043D\u043E, \u043D\u043E \u0433\u0440\u0435\u0448\u043A\u0438 \u043F\u0440\u0438 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430\u0442\u0430 \u043D\u0435 \u043F\u043E\u0437\u0432\u043E\u043B\u044F\u0432\u0430\u0442 \u0438\u0437\u043F\u044A\u043B\u043D\u0435\u043D\u0438\u0435\u0442\u043E \u0439."}}'),"ar-SA":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u062A\u0645 \u062D\u0641\u0638 \u0645\u062E\u0637\u0637 \u0627\u0644\u0639\u0645\u0644\u064A\u0629 \u0628\u0646\u062C\u0627\u062D\u060C \u0648\u0644\u0643\u0646 \u062A\u0645\u0646\u0639 \u0623\u062E\u0637\u0627\u0621 \u0627\u0644\u062A\u062D\u0642\u0642 \u0645\u0646 \u062A\u0634\u063A\u064A\u0644\u0647."}}'),"en-US":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"uk-UA":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u0421\u0445\u0435\u043C\u0430 \u043F\u0440\u043E\u0446\u0435\u0441\u0443 \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u0430 \u0443\u0441\u043F\u0456\u0448\u043D\u043E, \u0430\u043B\u0435 \u043F\u043E\u043C\u0438\u043B\u043A\u0438 \u0432\u0430\u043B\u0456\u0434\u0430\u0446\u0456\u0457 \u043F\u0435\u0440\u0435\u0448\u043A\u043E\u0434\u0436\u0430\u044E\u0442\u044C \u0457\u0457 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044E."}}'),"ru-RU":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u0421\u0445\u0435\u043C\u0430 \u043F\u0440\u043E\u0446\u0435\u0441\u0441\u0430 \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0430, \u043E\u0434\u043D\u0430\u043A\u043E \u043E\u0448\u0438\u0431\u043A\u0438 \u0432\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u0438 \u043F\u0440\u0435\u043F\u044F\u0442\u0441\u0442\u0432\u0443\u044E\u0442 \u0435\u0433\u043E \u0437\u0430\u043F\u0443\u0441\u043A\u0443."}}')};class l{static{this.\u0275fac=function(e){return new(e||l)}}static{this.\u0275mod=i.\u0275\u0275defineNgModule({type:l})}static{this.\u0275inj=i.\u0275\u0275defineInjector({providers:[n,p],imports:[_.CommonModule,d.CrtLibTranslateModule.forRoot({i18n:O})]})}}(function(){(typeof ngJitMode>"u"||ngJitMode)&&i.\u0275\u0275setNgModuleScope(l,{imports:[_.CommonModule,d.CrtLibTranslateModule]})})()}}]);
